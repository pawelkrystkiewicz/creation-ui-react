name: Release

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN_AUTOMATION: ${{ secrets.NPM_TOKEN_AUTOMATION }}
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v5
        with:
          node-version: 22.19.0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Verify NPM Authentication
        run: npm whoami

      - name: Install Dependencies
        run: bun i

      - name: Generate changeset if none exists
        run: |
          if [ ! "$(ls -A .changeset/*.md 2>/dev/null | grep -v README.md)" ]; then
            echo "No changeset files found, generating one from commits..."
            
            # Get commit messages since last release
            LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -z "$LAST_TAG" ]; then
              COMMITS=$(git log --pretty=format:"%s" --since="1 day ago")
            else
              COMMITS=$(git log --pretty=format:"%s" $LAST_TAG..HEAD)
            fi
            
            # Determine version bump based on conventional commits
            BUMP_TYPE="patch"
            while IFS= read -r commit; do
              if [[ $commit == *"!"* ]] || [[ $commit == feat!* ]] || [[ $commit == *"BREAKING CHANGE"* ]]; then
                BUMP_TYPE="major"
                break
              elif [[ $commit == feat* ]]; then
                BUMP_TYPE="minor"
              fi
            done <<< "$COMMITS"
            
            # Generate changeset
            cat > .changeset/auto-generated-$(date +%s).md << EOF
            ---
            "@creation-ui/react": $BUMP_TYPE
            ---
            
            Automated release based on commits:
            
            $COMMITS
            EOF
            
            echo "Generated changeset with $BUMP_TYPE version bump"
          else
            echo "Changeset files already exist, skipping generation"
          fi

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun run release

      - name: On success actions
        if: steps.changesets.outputs.published == 'true'
        run: echo "Package published successfully"